{"version":3,"sources":["components/types/types.js","components/reducers/authReducer.js","components/reducers/calendarReducer.js","components/reducers/uiReducer.js","components/reducers/rootReducer.js","components/store/store.js","helpers/fetch.js","components/actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","components/actions/events.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","components/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword1","rPassword2","rName","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","second","add","clon","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","utils","DateFnsUtils","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","inputVariant","ampm","label","format","minDate","minDateMessage","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","path","exact","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68aa11d1.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventLogout: '[event] Event logout',\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    authCheckingFinish: '[auth] Finish checking login state', \r\n    authStartLogin: '[auth] Start login', \r\n    authLogin: '[auth] Login', \r\n    authStartRegister: '[auth] Start Reginster',\r\n    authStartTokenRenew: '[auth] Start token renew', \r\n    authLogout: '[auth] Logout', \r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n     \r\n        default:\r\n            return state;\r\n    };\r\n};","import { types } from \"../types/types\";\r\n// {\r\n//     title: 'Cumpleaños del jefe de la empresa',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar pastel',\r\n//     id: 12313213213,\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Ernesto'\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    \r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            \r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events:[ ...state.events, action.payload ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e=> (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e=> (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n        case types.eventLoaded: \r\n        return{\r\n            ...state,\r\n            events: [...action.payload]\r\n        }\r\n        case types.eventLogout:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n                events: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n\r\n\r\n\r\n","\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n) ;","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\nconst fetchSinToken = ( endpoint ,data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; // localhost:4000/api/\r\n    if (method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n};\r\nconst fetchConToken = ( endpoint ,data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; // localhost:4000/api/\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email,password) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async( dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email,password,name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        // console.log(body);//test\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        // console.log(body);//test\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\nconst checkingFinish = () =>({type: types.authCheckingFinish});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n} \r\n\r\nconst logout = () =>({type: types.authLogout});\r\n\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../actions/auth';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'ernesto@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rEmail: 'jose@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n        rName: 'Jose'\r\n    });\r\n\r\n    const {rEmail,rPassword1, rPassword2, rName} = formRegisterValues;\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister= (e) => {\r\n        e.preventDefault();\r\n        dispatch(startRegister(rEmail,rPassword1, rName));\r\n\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas debed de ser iguales', 'error');\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit = {handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name= 'lEmail'\r\n                                value = {lEmail}\r\n                                onChange = {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name= 'lPassword'\r\n                                value = {lPassword}\r\n                                onChange = {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit = {handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name = 'rName'\r\n                                value = {rName}\r\n                                onChange = {handleRegisterInputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name = 'rEmail'\r\n                                value = {rEmail}\r\n                                onChange = {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name = 'rPassword1'\r\n                                value = {rPassword1}\r\n                                onChange = {handleRegisterInputChange}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name = 'rPassword2'\r\n                                value = {rPassword2}\r\n                                onChange = {handleRegisterInputChange}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../../helpers/fetch\";\r\nimport { prepareEvents } from \"../../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            console.log(body);\r\n            if (body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) =>({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\nexport const eventSetActive = (event) =>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () =>({type: types.eventClearActiveEvent});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated( event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = (event) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () =>{\r\n    return async(dispatch, getState) =>{\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{} ,'DELETE');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n const eventDeleted = () =>({type: types.eventDeleted});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch)  => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth';\r\nimport { eventLogout } from '../actions/events';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(eventLogout());\r\n        dispatch(startLogout());\r\n    };\r\n    return (\r\n        <div className = ' navbar navbar-dark bg-dark mb-4'>\r\n            <span className = 'navbar-brand'>\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className = 'btn btn-outline-danger'\r\n                onClick = {handleLogout}\r\n            >\r\n                <i className = 'fas fa-sign-out-alt'></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title,user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () =>({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () =>({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../actions/ui';\r\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../actions/events';\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minute(0).second(0).add(1, 'hours');\r\nconst clon = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: clon.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(clon.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title,start ,end} = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        \r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        // console.log(formValues)\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            Swal.fire('Error', 'La checha fin debe de ser mayor a la fecha de inicio', 'error');\r\n            return;\r\n        }\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        \r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1>{ (activeEvent) ? 'Editar Evento' : 'Nuevo Evento' }</h1>\r\n                <hr />\r\n                <form className=\"container\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <KeyboardDateTimePicker\r\n                            inputVariant=\"outlined\"\r\n                            ampm={false}\r\n                            label=\"Fecha y hora inicio\"\r\n                            value={dateStart}\r\n                            onChange={handleStartDateChange}\r\n                            format=\"MMMM dd yyyy, HH:mm \"\r\n                            className = 'w'\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <KeyboardDateTimePicker\r\n                            inputVariant=\"outlined\"\r\n                            ampm={false}\r\n                            label=\"Fecha y hora fin\"\r\n                            value={dateEnd}\r\n                            onChange={handleEndDateChange}\r\n                            minDate={dateStart}\r\n                            minDateMessage=\"End Date should be at least start Date \"\r\n                            format=\"MMMM dd yyyy, HH:mm \"\r\n                            className = 'w'\r\n                        />\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"off\" />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\"> Una descripción corta </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                        </textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\"> Información adicional </small>\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    ><i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../actions/ui';\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n    const addEvent = () =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className = 'btn btn-primary fab'\r\n            onClick = {addEvent}\r\n        >\r\n            <i className = 'fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { eventDeleted, eventStartDelete } from '../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () => {\r\n        // dispatch(eventDeleted(activeEvent));\r\n        dispatch(eventStartDelete());\r\n    }\r\n    return (\r\n        <button\r\n            className = 'btn btn-danger fab-danger'\r\n            onClick = {handleDelete}\r\n        >\r\n            <i className = 'fas fa-trash'></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n// const events = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar pastel',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Ernesto'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {events,activeEvent} = useSelector(state => state.calendar);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView')|| 'month');\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    };\r\n\r\n    const onSelectSlot = (e) =>{\r\n        // console.log(e)\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end,isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity:0.8,\r\n            color:'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages = {messages}\r\n                eventPropGetter = {eventStyleGetter}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent = {onSelectEvent}\r\n                onView = {onViewChange}\r\n                onSelectSlot = {onSelectSlot}\r\n                selectable = {true}\r\n                view = {lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n                <AddNewFab/>\r\n                {\r\n                    activeEvent && <DeleteEventFab/>\r\n                }\r\n                \r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../components/actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n    console.log(checking);\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n\r\n\r\n                    <PrivateRoute\r\n                        path = '/'\r\n                        exact\r\n                        component = {CalendarScreen}\r\n                        isAuthenticated = {!!uid}\r\n                    />\r\n                    <PublicRoute\r\n                        path = '/login'\r\n                        exact\r\n                        component = {LoginScreen}\r\n                        isAuthenticated = {!!uid}\r\n                    />\r\n\r\n                    <Redirect \r\n                        to = '/'\r\n                    />\r\n                    \r\n                    \r\n                </Switch>\r\n            </div>     \r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './components/store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nReactDOM.render(\r\n    <CalendarApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}